{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u043E\\u043B\\u0435\\u0433\\\\Desktop\\\\iTechArt_\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\\\\songbird\\\\songbird\\\\src\\\\components\\\\audio\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { BsArrowLeftShort } from \"react-icons/bs\";\nimport { BsArrowRightShort } from \"react-icons/bs\";\nimport { FaPlay } from \"react-icons/fa\";\nimport { FaPause } from \"react-icons/fa\";\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AudioPlayer = _ref => {\n  _s();\n\n  var _audioPlayer$current, _audioPlayer$current2;\n\n  let {\n    audio\n  } = _ref;\n  // state\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0); // references\n\n  const audioPlayer = useRef(); // reference our audio component\n\n  const progressBar = useRef(); // reference our progress bar\n\n  const animationRef = useRef(); // reference the animation\n\n  useEffect(() => {\n    const seconds = Math.floor(audioPlayer.current.duration);\n    setDuration(seconds);\n    progressBar.current.max = seconds;\n  }, [audioPlayer === null || audioPlayer === void 0 ? void 0 : (_audioPlayer$current = audioPlayer.current) === null || _audioPlayer$current === void 0 ? void 0 : _audioPlayer$current.loadedmetadata, audioPlayer === null || audioPlayer === void 0 ? void 0 : (_audioPlayer$current2 = audioPlayer.current) === null || _audioPlayer$current2 === void 0 ? void 0 : _audioPlayer$current2.readyState]);\n\n  const calculateTime = secs => {\n    const minutes = Math.floor(secs / 60);\n    const returnedMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`;\n    const seconds = Math.floor(secs % 60);\n    const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\n    return `${returnedMinutes}:${returnedSeconds}`;\n  };\n\n  const togglePlayPause = () => {\n    const prevValue = isPlaying;\n    setIsPlaying(!prevValue);\n\n    if (!prevValue) {\n      audioPlayer.current.play();\n      animationRef.current = requestAnimationFrame(whilePlaying);\n    } else {\n      audioPlayer.current.pause();\n      cancelAnimationFrame(animationRef.current);\n    }\n  };\n\n  const whilePlaying = () => {\n    progressBar.current.value = audioPlayer.current.currentTime;\n    changePlayerCurrentTime();\n    animationRef.current = requestAnimationFrame(whilePlaying);\n  };\n\n  const changeRange = () => {\n    audioPlayer.current.currentTime = progressBar.current.value;\n    changePlayerCurrentTime();\n  };\n\n  const changePlayerCurrentTime = () => {\n    progressBar.current.style.setProperty('--seek-before-width', `${progressBar.current.value / duration * 100}%`);\n    setCurrentTime(progressBar.current.value);\n  };\n\n  const backThirty = () => {\n    progressBar.current.value = Number(progressBar.current.value - 30);\n    changeRange();\n  };\n\n  const forwardThirty = () => {\n    progressBar.current.value = Number(progressBar.current.value + 30);\n    changeRange();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.audioPlayer,\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioPlayer,\n      src: `${audio}`,\n      preload: \"metadata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.forwardBackward,\n      onClick: backThirty,\n      children: [/*#__PURE__*/_jsxDEV(BsArrowLeftShort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 77\n      }, this), \" 30\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlayPause,\n      className: styles.playPause,\n      children: isPlaying ? /*#__PURE__*/_jsxDEV(FaPause, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(FaPlay, {\n        className: styles.play\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.forwardBackward,\n      onClick: forwardThirty,\n      children: [\"30 \", /*#__PURE__*/_jsxDEV(BsArrowRightShort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentTime,\n      children: calculateTime(currentTime)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        className: styles.progressBar,\n        defaultValue: \"0\",\n        ref: progressBar,\n        onChange: changeRange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.duration,\n      children: duration && !isNaN(duration) && calculateTime(duration)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AudioPlayer, \"f09q83bfkvXaw9MTtj6dBXFcqdw=\");\n\n_c = AudioPlayer;\nexport { AudioPlayer };\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"sources":["C:/Users/олег/Desktop/iTechArt_Стажировка/songbird/songbird/src/components/audio/index.jsx"],"names":["React","useState","useRef","useEffect","BsArrowLeftShort","BsArrowRightShort","FaPlay","FaPause","AudioPlayer","audio","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","audioPlayer","progressBar","animationRef","seconds","Math","floor","current","max","loadedmetadata","readyState","calculateTime","secs","minutes","returnedMinutes","returnedSeconds","togglePlayPause","prevValue","play","requestAnimationFrame","whilePlaying","pause","cancelAnimationFrame","value","changePlayerCurrentTime","changeRange","style","setProperty","backThirty","Number","forwardThirty","styles","forwardBackward","playPause","isNaN"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\n\nimport { BsArrowLeftShort } from \"react-icons/bs\"\nimport { BsArrowRightShort } from \"react-icons/bs\"\nimport { FaPlay } from \"react-icons/fa\"\nimport { FaPause } from \"react-icons/fa\"\n\nimport './styles.scss'\n\nconst AudioPlayer = ( { audio }) => {\n    // state\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [duration, setDuration] = useState(0);\n    const [currentTime, setCurrentTime] = useState(0);\n\n    // references\n    const audioPlayer = useRef();   // reference our audio component\n    const progressBar = useRef();   // reference our progress bar\n    const animationRef = useRef();  // reference the animation\n\n    useEffect(() => {\n        const seconds = Math.floor(audioPlayer.current.duration);\n        setDuration(seconds);\n        progressBar.current.max = seconds;\n    }, [audioPlayer?.current?.loadedmetadata, audioPlayer?.current?.readyState]);\n\n    const calculateTime = (secs) => {\n        const minutes = Math.floor(secs / 60);\n        const returnedMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`;\n        const seconds = Math.floor(secs % 60);\n        const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\n        return `${returnedMinutes}:${returnedSeconds}`;\n    }\n\n    const togglePlayPause = () => {\n        const prevValue = isPlaying;\n        setIsPlaying(!prevValue);\n        if (!prevValue) {\n            audioPlayer.current.play();\n            animationRef.current = requestAnimationFrame(whilePlaying)\n        } else {\n            audioPlayer.current.pause();\n            cancelAnimationFrame(animationRef.current);\n        }\n    }\n\n    const whilePlaying = () => {\n        progressBar.current.value = audioPlayer.current.currentTime;\n        changePlayerCurrentTime();\n        animationRef.current = requestAnimationFrame(whilePlaying);\n    }\n\n    const changeRange = () => {\n        audioPlayer.current.currentTime = progressBar.current.value;\n        changePlayerCurrentTime();\n    }\n\n    const changePlayerCurrentTime = () => {\n        progressBar.current.style.setProperty('--seek-before-width', `${progressBar.current.value / duration * 100}%`)\n        setCurrentTime(progressBar.current.value);\n    }\n\n    const backThirty = () => {\n        progressBar.current.value = Number(progressBar.current.value - 30);\n        changeRange();\n    }\n\n    const forwardThirty = () => {\n        progressBar.current.value = Number(progressBar.current.value + 30);\n        changeRange();\n    }\n\n    return (\n        <div className={styles.audioPlayer}>\n            <audio ref={audioPlayer} src={`${audio}`} preload=\"metadata\"></audio>\n            <button className={styles.forwardBackward} onClick={backThirty}><BsArrowLeftShort /> 30</button>\n            <button onClick={togglePlayPause} className={styles.playPause}>\n                {isPlaying ? <FaPause /> : <FaPlay className={styles.play} />}\n            </button>\n            <button className={styles.forwardBackward} onClick={forwardThirty}>30 <BsArrowRightShort /></button>\n\n            {/* current time */}\n            <div className={styles.currentTime}>{calculateTime(currentTime)}</div>\n\n            {/* progress bar */}\n            <div>\n                <input type=\"range\" className={styles.progressBar} defaultValue=\"0\" ref={progressBar} onChange={changeRange} />\n            </div>\n\n            {/* duration */}\n            <div className={styles.duration}>{(duration && !isNaN(duration)) && calculateTime(duration)}</div>\n        </div>\n    )\n}\n\nexport { AudioPlayer }"]},"metadata":{},"sourceType":"module"}