{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u043E\\u043B\\u0435\\u0433\\\\Desktop\\\\iTechArt_\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\\\\songbird\\\\songbird\\\\src\\\\components\\\\buttonNext\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { isCorrectCurrentBird, isLevelCompleted, isSelectedBirdExist, setLevel } from \"../../redux/actions\";\nimport \"./styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ButtonNext = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  let level = useSelector(state => state.level);\n  const levelCompleted = useSelector(state => state.levelCompleted);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `button-next ${levelCompleted ? \"active\" : \"\"}`,\n    onClick: () => {\n      if (levelCompleted) {\n        if (level < 5) {\n          level++;\n          dispatch(isSelectedBirdExist(false));\n        } else {\n          history.push(\"/endGame\");\n          level = 0;\n          dispatch(isSelectedBirdExist(false));\n        }\n      }\n\n      dispatch(isCorrectCurrentBird(false));\n      dispatch(setLevel(level));\n      dispatch(isLevelCompleted(false));\n    },\n    children: \"Next Level\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ButtonNext, \"+dcOO5cN/vYbQkR5ZHs05c63iZI=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = ButtonNext;\nexport default ButtonNext;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonNext\");","map":{"version":3,"sources":["C:/Users/олег/Desktop/iTechArt_Стажировка/songbird/songbird/src/components/buttonNext/index.jsx"],"names":["React","useDispatch","useSelector","useHistory","isCorrectCurrentBird","isLevelCompleted","isSelectedBirdExist","setLevel","ButtonNext","dispatch","history","level","state","levelCompleted","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SACEC,oBADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,QAJF,QAKO,qBALP;AAOA,OAAO,eAAP;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,OAAO,GAAGP,UAAU,EAA1B;AACA,MAAIQ,KAAK,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAvB;AACA,QAAME,cAAc,GAAGX,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,cAAlB,CAAlC;AACA,sBACE;AACE,IAAA,SAAS,EAAG,eAAcA,cAAc,GAAG,QAAH,GAAc,EAAG,EAD3D;AAEE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIA,cAAJ,EAAoB;AAClB,YAAIF,KAAK,GAAG,CAAZ,EAAe;AACbA,UAAAA,KAAK;AACLF,UAAAA,QAAQ,CAACH,mBAAmB,CAAC,KAAD,CAApB,CAAR;AACD,SAHD,MAGO;AACLI,UAAAA,OAAO,CAACI,IAAR,CAAa,UAAb;AACAH,UAAAA,KAAK,GAAG,CAAR;AACAF,UAAAA,QAAQ,CAACH,mBAAmB,CAAC,KAAD,CAApB,CAAR;AACD;AACF;;AACDG,MAAAA,QAAQ,CAACL,oBAAoB,CAAC,KAAD,CAArB,CAAR;AACAK,MAAAA,QAAQ,CAACF,QAAQ,CAACI,KAAD,CAAT,CAAR;AACAF,MAAAA,QAAQ,CAACJ,gBAAgB,CAAC,KAAD,CAAjB,CAAR;AACD,KAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA3BD;;GAAMG,U;UACaP,W,EACDE,U,EACJD,W,EACWA,W;;;KAJnBM,U;AA6BN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  isCorrectCurrentBird,\n  isLevelCompleted,\n  isSelectedBirdExist,\n  setLevel,\n} from \"../../redux/actions\";\n\nimport \"./styles.scss\";\n\nconst ButtonNext = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  let level = useSelector((state) => state.level);\n  const levelCompleted = useSelector((state) => state.levelCompleted);\n  return (\n    <button\n      className={`button-next ${levelCompleted ? \"active\" : \"\"}`}\n      onClick={() => {\n        if (levelCompleted) {\n          if (level < 5) {\n            level++;\n            dispatch(isSelectedBirdExist(false));\n          } else {\n            history.push(\"/endGame\");\n            level = 0;\n            dispatch(isSelectedBirdExist(false));\n          }\n        }\n        dispatch(isCorrectCurrentBird(false));\n        dispatch(setLevel(level));\n        dispatch(isLevelCompleted(false));\n      }}\n    >\n      Next Level\n    </button>\n  );\n};\n\nexport default ButtonNext;\n"]},"metadata":{},"sourceType":"module"}