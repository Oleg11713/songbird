{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u043E\\u043B\\u0435\\u0433\\\\Desktop\\\\iTechArt_\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\\\\songbird\\\\songbird\\\\src\\\\components\\\\signIn\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useState } from \"react\";\nimport firebase from \"firebase/compat\";\nimport { useHistory } from \"react-router-dom\";\nimport FormInput from \"../formInput\";\nimport CustomButton from \"../customButton\";\nimport { Context } from \"../../index\";\nimport { useAuth } from \"../../context\";\nimport \"./styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const {\n    login\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch {\n      setError(\"Failed to log in\");\n    }\n\n    setLoading(false);\n  }\n\n  const {\n    auth\n  } = useContext(Context);\n\n  const loginWithGoogle = async () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const {\n      user\n    } = await auth.signInWithPopup(provider);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        ref: emailref,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        ref: passwordRef,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          onClick: loginWithGoogle,\n          isGoogleSignIn: true,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"P57iLI1JEjxWoyC9zI9ttYaZBFY=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/олег/Desktop/iTechArt_Стажировка/songbird/songbird/src/components/signIn/index.jsx"],"names":["React","useContext","useRef","useState","firebase","useHistory","FormInput","CustomButton","Context","useAuth","SignIn","emailRef","passwordRef","login","error","setError","loading","setLoading","history","handleSubmit","e","preventDefault","current","value","push","auth","loginWithGoogle","provider","GoogleAuthProvider","user","signInWithPopup","emailref"],"mappings":"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","sourcesContent":["import React, {useContext, useRef, useState} from \"react\";\nimport firebase from \"firebase/compat\";\nimport {useHistory} from \"react-router-dom\";\n\nimport FormInput from \"../formInput\";\nimport CustomButton from \"../customButton\";\nimport { Context } from \"../../index\";\nimport {useAuth} from \"../../context\";\n\nimport \"./styles.scss\";\n\nconst SignIn = () => {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const { login } = useAuth()\n    const [error, setError] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        try {\n            setError(\"\")\n            setLoading(true)\n            await login(emailRef.current.value, passwordRef.current.value)\n            history.push(\"/\")\n        } catch {\n            setError(\"Failed to log in\")\n        }\n\n        setLoading(false)\n    }\n\n  const { auth } = useContext(Context);\n\n  const loginWithGoogle = async () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const { user } = await auth.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"sign-in\">\n      <h2 className=\"title\">I already have an account</h2>\n      <span>Sign in with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          ref={emailref}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          ref={passwordRef}\n          label=\"Password\"\n          required\n        />\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\">Sign in</CustomButton>\n          <CustomButton onClick={loginWithGoogle} isGoogleSignIn>\n            Sign in with Google\n          </CustomButton>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}