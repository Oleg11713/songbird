{"ast":null,"code":"import _slicedToArray from\"C:/Users/\\u043E\\u043B\\u0435\\u0433/Desktop/iTechArt_\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430/songbird/songbird/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useRef,useEffect}from\"react\";import\"./slider.scss\";import\"./thumb.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Slider=function Slider(_ref){var _ref$percentage=_ref.percentage,percentage=_ref$percentage===void 0?0:_ref$percentage,onChange=_ref.onChange;var PERCENTAGE=100;var PIXELS_IN_PERCENTAGE=7.5;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),position=_useState2[0],setPosition=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),marginLeft=_useState4[0],setMarginLeft=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),progressBarWidth=_useState6[0],setProgressBarWidth=_useState6[1];var rangeRef=useRef();var thumbRef=useRef();useEffect(function(){var rangeWidth=rangeRef.current.getBoundingClientRect().width;var thumbWidth=thumbRef.current.getBoundingClientRect().width;var centerThumb=thumbWidth/PERCENTAGE*percentage*-1;var centerProgressBar=thumbWidth+rangeWidth/PERCENTAGE*percentage-thumbWidth/PERCENTAGE*percentage;setPosition(percentage);setMarginLeft(centerThumb);setProgressBarWidth(centerProgressBar/PIXELS_IN_PERCENTAGE);},[percentage]);return/*#__PURE__*/_jsxs(\"div\",{className:\"slider-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-cover\",style:{width:\"\".concat(progressBarWidth,\"%\")}}),/*#__PURE__*/_jsx(\"div\",{className:\"thumb\",ref:thumbRef,style:{left:\"\".concat(position,\"%\"),marginLeft:\"\".concat(marginLeft,\"px\")}}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",value:position.toString(),ref:rangeRef,step:\"0.01\",className:\"range\",onChange:onChange})]});};export default Slider;","map":{"version":3,"sources":["C:/Users/олег/Desktop/iTechArt_Стажировка/songbird/songbird/src/components/slider/Slider.jsx"],"names":["useState","useRef","useEffect","Slider","percentage","onChange","PERCENTAGE","PIXELS_IN_PERCENTAGE","position","setPosition","marginLeft","setMarginLeft","progressBarWidth","setProgressBarWidth","rangeRef","thumbRef","rangeWidth","current","getBoundingClientRect","width","thumbWidth","centerThumb","centerProgressBar","left","toString"],"mappings":"oNAAA,OAASA,QAAT,CAAmBC,MAAnB,CAA2BC,SAA3B,KAA4C,OAA5C,CAEA,MAAO,eAAP,CACA,MAAO,cAAP,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAkC,0BAA/BC,UAA+B,CAA/BA,UAA+B,0BAAlB,CAAkB,iBAAfC,QAAe,MAAfA,QAAe,CAC/C,GAAMC,CAAAA,UAAU,CAAG,GAAnB,CACA,GAAMC,CAAAA,oBAAoB,CAAG,GAA7B,CAEA,cAAgCP,QAAQ,CAAC,CAAD,CAAxC,wCAAOQ,QAAP,eAAiBC,WAAjB,eACA,eAAoCT,QAAQ,CAAC,CAAD,CAA5C,yCAAOU,UAAP,eAAmBC,aAAnB,eACA,eAAgDX,QAAQ,CAAC,CAAD,CAAxD,yCAAOY,gBAAP,eAAyBC,mBAAzB,eAEA,GAAMC,CAAAA,QAAQ,CAAGb,MAAM,EAAvB,CACA,GAAMc,CAAAA,QAAQ,CAAGd,MAAM,EAAvB,CAEAC,SAAS,CAAC,UAAM,CACd,GAAMc,CAAAA,UAAU,CAAGF,QAAQ,CAACG,OAAT,CAAiBC,qBAAjB,GAAyCC,KAA5D,CACA,GAAMC,CAAAA,UAAU,CAAGL,QAAQ,CAACE,OAAT,CAAiBC,qBAAjB,GAAyCC,KAA5D,CACA,GAAME,CAAAA,WAAW,CAAID,UAAU,CAAGd,UAAd,CAA4BF,UAA5B,CAAyC,CAAC,CAA9D,CACA,GAAMkB,CAAAA,iBAAiB,CACrBF,UAAU,CACTJ,UAAU,CAAGV,UAAd,CAA4BF,UAD5B,CAECgB,UAAU,CAAGd,UAAd,CAA4BF,UAH9B,CAIAK,WAAW,CAACL,UAAD,CAAX,CACAO,aAAa,CAACU,WAAD,CAAb,CACAR,mBAAmB,CAACS,iBAAiB,CAAGf,oBAArB,CAAnB,CACD,CAXQ,CAWN,CAACH,UAAD,CAXM,CAAT,CAaA,mBACE,aAAK,SAAS,CAAC,kBAAf,wBACE,YACE,SAAS,CAAC,oBADZ,CAEE,KAAK,CAAE,CACLe,KAAK,WAAKP,gBAAL,KADA,CAFT,EADF,cAOE,YACE,SAAS,CAAC,OADZ,CAEE,GAAG,CAAEG,QAFP,CAGE,KAAK,CAAE,CACLQ,IAAI,WAAKf,QAAL,KADC,CAELE,UAAU,WAAKA,UAAL,MAFL,CAHT,EAPF,cAeE,cACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAEF,QAAQ,CAACgB,QAAT,EAFT,CAGE,GAAG,CAAEV,QAHP,CAIE,IAAI,CAAC,MAJP,CAKE,SAAS,CAAC,OALZ,CAME,QAAQ,CAAET,QANZ,EAfF,GADF,CA0BD,CAlDD,CAoDA,cAAeF,CAAAA,MAAf","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\n\nimport \"./slider.scss\";\nimport \"./thumb.scss\";\n\nconst Slider = ({ percentage = 0, onChange }) => {\n  const PERCENTAGE = 100;\n  const PIXELS_IN_PERCENTAGE = 7.5;\n\n  const [position, setPosition] = useState(0);\n  const [marginLeft, setMarginLeft] = useState(0);\n  const [progressBarWidth, setProgressBarWidth] = useState(0);\n\n  const rangeRef = useRef();\n  const thumbRef = useRef();\n\n  useEffect(() => {\n    const rangeWidth = rangeRef.current.getBoundingClientRect().width;\n    const thumbWidth = thumbRef.current.getBoundingClientRect().width;\n    const centerThumb = (thumbWidth / PERCENTAGE) * percentage * -1;\n    const centerProgressBar =\n      thumbWidth +\n      (rangeWidth / PERCENTAGE) * percentage -\n      (thumbWidth / PERCENTAGE) * percentage;\n    setPosition(percentage);\n    setMarginLeft(centerThumb);\n    setProgressBarWidth(centerProgressBar / PIXELS_IN_PERCENTAGE);\n  }, [percentage]);\n\n  return (\n    <div className=\"slider-container\">\n      <div\n        className=\"progress-bar-cover\"\n        style={{\n          width: `${progressBarWidth}%`,\n        }}\n      />\n      <div\n        className=\"thumb\"\n        ref={thumbRef}\n        style={{\n          left: `${position}%`,\n          marginLeft: `${marginLeft}px`,\n        }}\n      />\n      <input\n        type=\"range\"\n        value={position.toString()}\n        ref={rangeRef}\n        step=\"0.01\"\n        className=\"range\"\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}