{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/\\u043E\\u043B\\u0435\\u0433/Desktop/iTechArt_\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430/songbird/songbird/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/\\u043E\\u043B\\u0435\\u0433/Desktop/iTechArt_\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430/songbird/songbird/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/\\u043E\\u043B\\u0435\\u0433/Desktop/iTechArt_\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430/songbird/songbird/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import firebase from\"firebase/compat\";import{useHistory}from\"react-router-dom\";import{useDispatch,useSelector}from\"react-redux\";import{toast,ToastContainer}from\"react-toastify\";import{useFormik}from\"formik\";import*as yup from\"yup\";import{TextField}from\"@material-ui/core\";import CustomButton from\"../customButton\";import{auth}from\"../../firebase/utils\";import{setCurrentUser}from\"../../redux/user/actions\";import{selectCurrentUser}from\"../../redux/user/selectors\";import\"./styles.scss\";import\"react-toastify/dist/ReactToastify.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SignIn=function SignIn(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var history=useHistory();var dispatch=useDispatch();var currentUser=useSelector(selectCurrentUser);var validationSchema=yup.object({email:yup.string().email(\"Введите корректный адрес эл. почты\").required(\"Пожалуйста, заполните данное поле\"),password:yup.string().required(\"Пожалуйста, заполните данное поле\")});var formik=useFormik({initialValues:{email:\"\",password:\"\"},onSubmit:function(){var _onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setLoading(true);_context.t0=dispatch;_context.t1=setCurrentUser;_context.next=6;return auth.signInWithEmailAndPassword(values.email,values.password);case 6:_context.t2=_context.sent;_context.t3=(0,_context.t1)(_context.t2);(0,_context.t0)(_context.t3);toast.success(\"Авторизация прошла успешно\",{className:\"toast-success\",draggable:false,position:toast.POSITION.BOTTOM_CENTER});history.go(0);_context.next=16;break;case 13:_context.prev=13;_context.t4=_context[\"catch\"](0);toast.error(\"Не удалось войти\",{className:\"toast-error\",draggable:false,position:toast.POSITION.BOTTOM_CENTER});case 16:setLoading(false);console.log(currentUser);case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,13]]);}));function onSubmit(_x){return _onSubmit.apply(this,arguments);}return onSubmit;}(),validationSchema:validationSchema});var loginWithGoogle=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.t0=dispatch;_context2.t1=setCurrentUser;_context2.next=4;return auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());case 4:_context2.t2=_context2.sent;_context2.t3=(0,_context2.t1)(_context2.t2);(0,_context2.t0)(_context2.t3);history.go(0);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function loginWithGoogle(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"sign-in\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"\\u0423 \\u043C\\u0435\\u043D\\u044F \\u0443\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\"}),/*#__PURE__*/_jsx(\"div\",{children:\"\\u0412\\u043E\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0443, \\u0443\\u043A\\u0430\\u0437\\u0430\\u0432 \\u0441\\u0432\\u043E\\u0439 \\u0430\\u0434\\u0440\\u0435\\u0441 \\u044D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0439 \\u043F\\u043E\\u0447\\u0442\\u044B \\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:formik.handleSubmit,children:[/*#__PURE__*/_jsx(TextField,{id:\"emailSignIn\",name:\"email\",label:\"Email\",value:formik.values.email,onChange:formik.handleChange,error:formik.touched.email&&Boolean(formik.errors.email),helperText:formik.touched.email&&formik.errors.email}),/*#__PURE__*/_jsx(TextField,{id:\"passwordSignIn\",name:\"password\",type:\"password\",label:\"Password\",value:formik.values.password,onChange:formik.handleChange,error:formik.touched.password&&Boolean(formik.errors.password),helperText:formik.touched.password&&formik.errors.password}),/*#__PURE__*/_jsxs(\"div\",{className:\"buttons\",children:[/*#__PURE__*/_jsx(CustomButton,{disabled:loading,type:\"submit\",children:\"Sign in\"}),/*#__PURE__*/_jsx(CustomButton,{type:\"submit\",onClick:loginWithGoogle,isGoogleSignIn:true,children:\"Sign in with Google\"})]})]}),/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(ToastContainer,{})})]});};export default SignIn;","map":{"version":3,"sources":["C:/Users/олег/Desktop/iTechArt_Стажировка/songbird/songbird/src/components/signIn/index.jsx"],"names":["React","useState","firebase","useHistory","useDispatch","useSelector","toast","ToastContainer","useFormik","yup","TextField","CustomButton","auth","setCurrentUser","selectCurrentUser","SignIn","loading","setLoading","history","dispatch","currentUser","validationSchema","object","email","string","required","password","formik","initialValues","onSubmit","values","signInWithEmailAndPassword","success","className","draggable","position","POSITION","BOTTOM_CENTER","go","error","console","log","loginWithGoogle","signInWithPopup","GoogleAuthProvider","handleSubmit","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport firebase from \"firebase/compat\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { TextField } from \"@material-ui/core\";\n\nimport CustomButton from \"../customButton\";\nimport { auth } from \"../../firebase/utils\";\nimport { setCurrentUser } from \"../../redux/user/actions\";\nimport { selectCurrentUser } from \"../../redux/user/selectors\";\n\nimport \"./styles.scss\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst SignIn = () => {\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectCurrentUser);\n\n  const validationSchema = yup.object({\n    email: yup\n      .string()\n      .email(\"Введите корректный адрес эл. почты\")\n      .required(\"Пожалуйста, заполните данное поле\"),\n    password: yup.string().required(\"Пожалуйста, заполните данное поле\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    onSubmit: async (values) => {\n      try {\n        setLoading(true);\n        dispatch(\n          setCurrentUser(\n            await auth.signInWithEmailAndPassword(values.email, values.password)\n          )\n        );\n        toast.success(\"Авторизация прошла успешно\", {\n          className: \"toast-success\",\n          draggable: false,\n          position: toast.POSITION.BOTTOM_CENTER,\n        });\n        history.go(0);\n      } catch {\n        toast.error(\"Не удалось войти\", {\n          className: \"toast-error\",\n          draggable: false,\n          position: toast.POSITION.BOTTOM_CENTER,\n        });\n      }\n\n      setLoading(false);\n      console.log(currentUser);\n    },\n    validationSchema: validationSchema,\n  });\n\n  const loginWithGoogle = async () => {\n    dispatch(\n      setCurrentUser(\n        await auth.signInWithPopup(new firebase.auth.GoogleAuthProvider())\n      )\n    );\n    history.go(0);\n  };\n\n  return (\n    <div className=\"sign-in\">\n      <div className=\"title\">У меня уже есть аккаунт</div>\n      <div>Войдите в систему, указав свой адрес электронной почты и пароль</div>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          id=\"emailSignIn\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          id=\"passwordSignIn\"\n          name=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <div className=\"buttons\">\n          <CustomButton disabled={loading} type=\"submit\">\n            Sign in\n          </CustomButton>\n          <CustomButton type=\"submit\" onClick={loginWithGoogle} isGoogleSignIn>\n            Sign in with Google\n          </CustomButton>\n        </div>\n      </form>\n      <>\n        <ToastContainer />\n      </>\n    </div>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}