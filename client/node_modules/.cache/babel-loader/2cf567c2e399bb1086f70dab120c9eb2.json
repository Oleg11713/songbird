{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst totalScore = state => state.progress.totalScore;\n\nconst isLevelCompleted = state => state.progress.isLevelCompleted;\n\nconst scoreOnTheLevel = state => state.progress.scoreOnTheLevel;\n\nconst level = state => state.progress.level;\n\nconst maxLevel = state => state.progress.maxLevel;\n\nexport const selectTotalScore = createSelector([totalScore], totalScore => totalScore);\nexport const selectLevel = createSelector([level], level => level);\nexport const selectIsLevelCompleted = createSelector([isLevelCompleted], isLevelCompleted => isLevelCompleted);\nexport const selectScoreOnTheLevel = createSelector([scoreOnTheLevel], scoreOnTheLevel => scoreOnTheLevel);\nexport const selectMaxLevel = createSelector([maxLevel], maxLevel => maxLevel);","map":{"version":3,"sources":["C:/Users/олег/Desktop/iTechArt_Стажировка/songbird/songbird/src/redux/progress/selectors.js"],"names":["createSelector","totalScore","state","progress","isLevelCompleted","scoreOnTheLevel","level","maxLevel","selectTotalScore","selectLevel","selectIsLevelCompleted","selectScoreOnTheLevel","selectMaxLevel"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeF,UAA7C;;AACA,MAAMG,gBAAgB,GAAIF,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,gBAAnD;;AACA,MAAMC,eAAe,GAAIH,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeE,eAAlD;;AACA,MAAMC,KAAK,GAAIJ,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeG,KAAxC;;AACA,MAAMC,QAAQ,GAAIL,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeI,QAA3C;;AAEA,OAAO,MAAMC,gBAAgB,GAAGR,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE3CA,UAAD,IAAgBA,UAF4B,CAAvC;AAKP,OAAO,MAAMQ,WAAW,GAAGT,cAAc,CAAC,CAACM,KAAD,CAAD,EAAWA,KAAD,IAAWA,KAArB,CAAlC;AAEP,OAAO,MAAMI,sBAAsB,GAAGV,cAAc,CAClD,CAACI,gBAAD,CADkD,EAEjDA,gBAAD,IAAsBA,gBAF4B,CAA7C;AAKP,OAAO,MAAMO,qBAAqB,GAAGX,cAAc,CACjD,CAACK,eAAD,CADiD,EAEhDA,eAAD,IAAqBA,eAF4B,CAA5C;AAKP,OAAO,MAAMO,cAAc,GAAGZ,cAAc,CAC1C,CAACO,QAAD,CAD0C,EAEzCA,QAAD,IAAcA,QAF4B,CAArC","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst totalScore = (state) => state.progress.totalScore;\nconst isLevelCompleted = (state) => state.progress.isLevelCompleted;\nconst scoreOnTheLevel = (state) => state.progress.scoreOnTheLevel;\nconst level = (state) => state.progress.level;\nconst maxLevel = (state) => state.progress.maxLevel;\n\nexport const selectTotalScore = createSelector(\n  [totalScore],\n  (totalScore) => totalScore\n);\n\nexport const selectLevel = createSelector([level], (level) => level);\n\nexport const selectIsLevelCompleted = createSelector(\n  [isLevelCompleted],\n  (isLevelCompleted) => isLevelCompleted\n);\n\nexport const selectScoreOnTheLevel = createSelector(\n  [scoreOnTheLevel],\n  (scoreOnTheLevel) => scoreOnTheLevel\n);\n\nexport const selectMaxLevel = createSelector(\n  [maxLevel],\n  (maxLevel) => maxLevel\n);\n"]},"metadata":{},"sourceType":"module"}