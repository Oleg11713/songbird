{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u043E\\u043B\\u0435\\u0433\\\\Desktop\\\\iTechArt_\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\\\\songbird\\\\songbird\\\\src\\\\components\\\\signIn\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport firebase from \"firebase/compat\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { TextField } from \"@material-ui/core\";\nimport FormInput from \"../formInput\";\nimport CustomButton from \"../customButton\";\nimport { auth } from \"../../firebase/utils\";\nimport { setCurrentUser } from \"../../redux/user/actions\";\nimport \"./styles.scss\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [userCredentials, setUserCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: {}\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      setLoading(true);\n      await auth.signInWithEmailAndPassword(email, password);\n      toast.success(\"Авторизация прошла успешно\", {\n        className: \"toast-success\",\n        draggable: false,\n        position: toast.POSITION.BOTTOM_CENTER\n      });\n      history.push(\"/\");\n    } catch {\n      toast.error(\"Не удалось войти\", {\n        className: \"toast-error\",\n        draggable: false,\n        position: toast.POSITION.BOTTOM_CENTER\n      });\n    }\n\n    setLoading(false);\n  };\n\n  const loginWithGoogle = async () => {\n    dispatch(setCurrentUser(await auth.signInWithPopup(new firebase.auth.GoogleAuthProvider())));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"\\u0423 \\u043C\\u0435\\u043D\\u044F \\u0443\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0412\\u043E\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0443, \\u0443\\u043A\\u0430\\u0437\\u0430\\u0432 \\u0441\\u0432\\u043E\\u0439 \\u0430\\u0434\\u0440\\u0435\\u0441 \\u044D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0439 \\u043F\\u043E\\u0447\\u0442\\u044B \\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          disabled: loading,\n          type: \"submit\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          onClick: loginWithGoogle,\n          isGoogleSignIn: true,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"rCNy42to5domc3S2y9K0gVRyU2E=\", false, function () {\n  return [useHistory, useDispatch, useFormik];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/олег/Desktop/iTechArt_Стажировка/songbird/songbird/src/components/signIn/index.jsx"],"names":["React","useState","firebase","useHistory","useDispatch","toast","ToastContainer","useFormik","yup","TextField","FormInput","CustomButton","auth","setCurrentUser","SignIn","loading","setLoading","history","dispatch","userCredentials","setUserCredentials","email","password","formik","initialValues","onSubmit","handleChange","event","name","value","target","handleSubmit","preventDefault","signInWithEmailAndPassword","success","className","draggable","position","POSITION","BOTTOM_CENTER","push","error","loginWithGoogle","signInWithPopup","GoogleAuthProvider"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport firebase from \"firebase/compat\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { TextField } from \"@material-ui/core\";\n\nimport FormInput from \"../formInput\";\nimport CustomButton from \"../customButton\";\nimport { auth } from \"../../firebase/utils\";\nimport { setCurrentUser } from \"../../redux/user/actions\";\n\nimport \"./styles.scss\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst SignIn = () => {\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [userCredentials, setUserCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = userCredentials;\n\n  const formik = useFormik({\n      initialValues: {\n          email: '',\n          password: ''\n      },\n      onSubmit: {\n          \n      }\n  })\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      setLoading(true);\n      await auth.signInWithEmailAndPassword(email, password);\n      toast.success(\"Авторизация прошла успешно\", {\n        className: \"toast-success\",\n        draggable: false,\n        position: toast.POSITION.BOTTOM_CENTER,\n      });\n      history.push(\"/\");\n    } catch {\n      toast.error(\"Не удалось войти\", {\n        className: \"toast-error\",\n        draggable: false,\n        position: toast.POSITION.BOTTOM_CENTER,\n      });\n    }\n\n    setLoading(false);\n  };\n\n  const loginWithGoogle = async () => {\n    dispatch(\n      setCurrentUser(\n        await auth.signInWithPopup(new firebase.auth.GoogleAuthProvider())\n      )\n    );\n  };\n\n  return (\n    <div className=\"sign-in\">\n      <div className=\"title\">У меня уже есть аккаунт</div>\n      <div>Войдите в систему, указав свой адрес электронной почты и пароль</div>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          onChange={handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          onChange={handleChange}\n          label=\"Password\"\n          required\n        />\n        <div className=\"buttons\">\n          <CustomButton disabled={loading} type=\"submit\">\n            Sign in\n          </CustomButton>\n          <CustomButton onClick={loginWithGoogle} isGoogleSignIn>\n            Sign in with Google\n          </CustomButton>\n        </div>\n      </form>\n      <>\n        <ToastContainer />\n      </>\n    </div>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}