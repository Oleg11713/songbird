{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u043E\\u043B\\u0435\\u0433\\\\Desktop\\\\iTechArt_\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\\\\songbird\\\\songbird\\\\src\\\\components\\\\signUp\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { TextField } from \"@material-ui/core\";\nimport CustomButton from \"../customButton\";\nimport { auth, createUserProfileDocument } from \"../../firebase/utils\";\nimport \"./styles.scss\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const validationSchema = yup.object({\n    firstName: yup.string().required(\"Поле Имя обязятельное\"),\n    secondName: yup.string().required(\"Поле Фамилия обязятельное\"),\n    email: yup.string().email(\"Enter a valid email\").required(\"Поле Почта обязятельное\"),\n    password: yup.string().required(\"Поле Пароль обязятельное\"),\n    passwordConfirm: yup.string().required(\"Поле Подтверждение пароля обязятельное\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      secondName: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirm: \"\"\n    },\n    onSubmit: async values => {\n      if (values.password !== values.passwordConfirm) {\n        return toast.error(\"Пароли не совпадают\", {\n          className: \"toast-error\",\n          draggable: false,\n          position: toast.POSITION.BOTTOM_CENTER\n        });\n      }\n\n      try {\n        setLoading(true);\n        const {\n          user\n        } = await auth.createUserWithEmailAndPassword(values.email, values.password);\n        const displayName = values.firstName + \" \" + values.secondName;\n        const password = values.password;\n        await createUserProfileDocument(user, {\n          displayName,\n          password\n        });\n        toast.success(\"Вы успешно зарегистрировались\", {\n          className: \"toast-success\",\n          draggable: false,\n          position: toast.POSITION.BOTTOM_CENTER\n        });\n      } catch {\n        toast.error(\"Не удалось зарегистрироваться\", {\n          className: \"toast-error\",\n          draggable: false,\n          position: toast.POSITION.BOTTOM_CENTER\n        });\n      }\n\n      setLoading(false);\n    },\n    validationSchema: validationSchema\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"\\u0423 \\u043C\\u0435\\u043D\\u044F \\u043D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435\\u0441\\u044C, \\u0443\\u043A\\u0430\\u0437\\u0430\\u0432 \\u0441\\u0432\\u043E\\u0439 \\u0430\\u0434\\u0440\\u0435\\u0441 \\u044D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0439 \\u043F\\u043E\\u0447\\u0442\\u044B \\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"firstName\",\n        name: \"firstName\",\n        label: \"First Name\",\n        value: formik.values.firstName,\n        onChange: formik.handleChange,\n        error: formik.touched.firstName && Boolean(formik.errors.firstName),\n        helperText: formik.touched.firstName && formik.errors.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"secondName\",\n        name: \"secondName\",\n        label: \"Second Name\",\n        value: formik.values.secondName,\n        onChange: formik.handleChange,\n        error: formik.touched.secondName && Boolean(formik.errors.secondName),\n        helperText: formik.touched.secondName && formik.errors.secondName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"emailSignUp\",\n        name: \"email\",\n        label: \"Email\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        error: formik.touched.email && Boolean(formik.errors.email),\n        helperText: formik.touched.email && formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"passwordSignUp\",\n        name: \"password\",\n        type: \"password\",\n        label: \"Password\",\n        value: formik.values.password,\n        onChange: formik.handleChange,\n        error: formik.touched.password && Boolean(formik.errors.password),\n        helperText: formik.touched.password && formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"passwordConfirm\",\n        name: \"passwordConfirm\",\n        type: \"password\",\n        value: formik.values.passwordConfirm,\n        onChange: formik.handleChange,\n        error: formik.touched.passwordConfirm && Boolean(formik.errors.passwordConfirm),\n        helperText: formik.touched.passwordConfirm && formik.errors.passwordConfirm,\n        label: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        disabled: loading,\n        type: \"submit\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"pJ87EHN1dfgLFfg5TTdXt1LPs8E=\", false, function () {\n  return [useFormik];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/олег/Desktop/iTechArt_Стажировка/songbird/songbird/src/components/signUp/index.jsx"],"names":["React","useState","toast","ToastContainer","useFormik","yup","TextField","CustomButton","auth","createUserProfileDocument","SignUp","loading","setLoading","validationSchema","object","firstName","string","required","secondName","email","password","passwordConfirm","formik","initialValues","onSubmit","values","error","className","draggable","position","POSITION","BOTTOM_CENTER","user","createUserWithEmailAndPassword","displayName","success","handleSubmit","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { TextField } from \"@material-ui/core\";\n\nimport CustomButton from \"../customButton\";\nimport { auth, createUserProfileDocument } from \"../../firebase/utils\";\n\nimport \"./styles.scss\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst SignUp = () => {\n  const [loading, setLoading] = useState(false);\n\n  const validationSchema = yup.object({\n    firstName: yup.string().required(\"Поле Имя обязятельное\"),\n    secondName: yup.string().required(\"Поле Фамилия обязятельное\"),\n    email: yup  \n      .string()\n      .email(\"Enter a valid email\")\n      .required(\"Поле Почта обязятельное\"),\n    password: yup.string().required(\"Поле Пароль обязятельное\"),\n    passwordConfirm: yup.string().required(\"Поле Подтверждение пароля обязятельное\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      secondName: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n    },\n    onSubmit: async (values) => {\n      if (values.password !== values.passwordConfirm) {\n        return toast.error(\"Пароли не совпадают\", {\n          className: \"toast-error\",\n          draggable: false,\n          position: toast.POSITION.BOTTOM_CENTER,\n        });\n      }\n\n      try {\n        setLoading(true);\n        const { user } = await auth.createUserWithEmailAndPassword(\n          values.email,\n          values.password\n        );\n        const displayName = values.firstName + \" \" + values.secondName;\n        const password = values.password;\n        await createUserProfileDocument(user, { displayName, password });\n        toast.success(\"Вы успешно зарегистрировались\", {\n          className: \"toast-success\",\n          draggable: false,\n          position: toast.POSITION.BOTTOM_CENTER,\n        });\n      } catch {\n        toast.error(\"Не удалось зарегистрироваться\", {\n          className: \"toast-error\",\n          draggable: false,\n          position: toast.POSITION.BOTTOM_CENTER,\n        });\n      }\n\n      setLoading(false);\n    },\n    validationSchema: validationSchema,\n  });\n\n  return (\n    <div className=\"sign-up\">\n      <div className=\"title\">У меня нет аккаунта</div>\n      <div>Зарегистрируйтесь, указав свой адрес электронной почты и пароль</div>\n      <form className=\"sign-up-form\" onSubmit={formik.handleSubmit}>\n        <TextField\n          id=\"firstName\"\n          name=\"firstName\"\n          label=\"First Name\"\n          value={formik.values.firstName}\n          onChange={formik.handleChange}\n          error={formik.touched.firstName && Boolean(formik.errors.firstName)}\n          helperText={formik.touched.firstName && formik.errors.firstName}\n        />\n        <TextField\n          id=\"secondName\"\n          name=\"secondName\"\n          label=\"Second Name\"\n          value={formik.values.secondName}\n          onChange={formik.handleChange}\n          error={formik.touched.secondName && Boolean(formik.errors.secondName)}\n          helperText={formik.touched.secondName && formik.errors.secondName}\n        />\n        <TextField\n          id=\"emailSignUp\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          id=\"passwordSignUp\"\n          name=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <TextField\n          id=\"passwordConfirm\"\n          name=\"passwordConfirm\"\n          type=\"password\"\n          value={formik.values.passwordConfirm}\n          onChange={formik.handleChange}\n          error={\n            formik.touched.passwordConfirm &&\n            Boolean(formik.errors.passwordConfirm)\n          }\n          helperText={\n            formik.touched.passwordConfirm && formik.errors.passwordConfirm\n          }\n          label=\"Confirm Password\"\n        />\n        <CustomButton disabled={loading} type=\"submit\">\n          SIGN UP\n        </CustomButton>\n      </form>\n      <>\n        <ToastContainer />\n      </>\n    </div>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}