{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u043E\\u043B\\u0435\\u0433\\\\Desktop\\\\iTechArt_\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\\\\songbird\\\\songbird\\\\client\\\\src\\\\components\\\\slider\\\\Slider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from \"react\";\nimport \"./slider.scss\";\nimport \"./thumb.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Slider = _ref => {\n  _s();\n\n  let {\n    percentage = 0,\n    onChange\n  } = _ref;\n  const PERCENTAGE = 100;\n  const PIXELS_IN_PERCENTAGE = 7.5;\n  const [position, setPosition] = useState(0);\n  const [marginLeft, setMarginLeft] = useState(0);\n  const [progressBarWidth, setProgressBarWidth] = useState(0);\n  const rangeRef = useRef();\n  const thumbRef = useRef();\n  useEffect(() => {\n    const rangeWidth = rangeRef.current.getBoundingClientRect().width;\n    const thumbWidth = thumbRef.current.getBoundingClientRect().width;\n    const centerThumb = thumbWidth / PERCENTAGE * percentage * -1;\n    const centerProgressBar = thumbWidth + rangeWidth / PERCENTAGE * percentage - thumbWidth / PERCENTAGE * percentage;\n    setPosition(percentage);\n    setMarginLeft(centerThumb);\n    setProgressBarWidth(centerProgressBar / PIXELS_IN_PERCENTAGE);\n  }, [percentage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar-cover\",\n      style: {\n        width: `${progressBarWidth}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thumb\",\n      ref: thumbRef,\n      style: {\n        left: `${position}%`,\n        marginLeft: `${marginLeft}px`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      value: position.toString(),\n      ref: rangeRef,\n      step: \"0.01\",\n      className: \"range\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"Py6d0w+GJL4/xZyrJMTP0SnoVI4=\");\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["C:/Users/олег/Desktop/iTechArt_Стажировка/songbird/songbird/client/src/components/slider/Slider.jsx"],"names":["useState","useRef","useEffect","Slider","percentage","onChange","PERCENTAGE","PIXELS_IN_PERCENTAGE","position","setPosition","marginLeft","setMarginLeft","progressBarWidth","setProgressBarWidth","rangeRef","thumbRef","rangeWidth","current","getBoundingClientRect","width","thumbWidth","centerThumb","centerProgressBar","left","toString"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AAEA,OAAO,eAAP;AACA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAG,QAAkC;AAAA;;AAAA,MAAjC;AAAEC,IAAAA,UAAU,GAAG,CAAf;AAAkBC,IAAAA;AAAlB,GAAiC;AAC/C,QAAMC,UAAU,GAAG,GAAnB;AACA,QAAMC,oBAAoB,GAAG,GAA7B;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACY,gBAAD,EAAmBC,mBAAnB,IAA0Cb,QAAQ,CAAC,CAAD,CAAxD;AAEA,QAAMc,QAAQ,GAAGb,MAAM,EAAvB;AACA,QAAMc,QAAQ,GAAGd,MAAM,EAAvB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,UAAU,GAAGF,QAAQ,CAACG,OAAT,CAAiBC,qBAAjB,GAAyCC,KAA5D;AACA,UAAMC,UAAU,GAAGL,QAAQ,CAACE,OAAT,CAAiBC,qBAAjB,GAAyCC,KAA5D;AACA,UAAME,WAAW,GAAID,UAAU,GAAGd,UAAd,GAA4BF,UAA5B,GAAyC,CAAC,CAA9D;AACA,UAAMkB,iBAAiB,GACrBF,UAAU,GACTJ,UAAU,GAAGV,UAAd,GAA4BF,UAD5B,GAECgB,UAAU,GAAGd,UAAd,GAA4BF,UAH9B;AAIAK,IAAAA,WAAW,CAACL,UAAD,CAAX;AACAO,IAAAA,aAAa,CAACU,WAAD,CAAb;AACAR,IAAAA,mBAAmB,CAACS,iBAAiB,GAAGf,oBAArB,CAAnB;AACD,GAXQ,EAWN,CAACH,UAAD,CAXM,CAAT;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,oBADZ;AAEE,MAAA,KAAK,EAAE;AACLe,QAAAA,KAAK,EAAG,GAAEP,gBAAiB;AADtB;AAFT;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,GAAG,EAAEG,QAFP;AAGE,MAAA,KAAK,EAAE;AACLQ,QAAAA,IAAI,EAAG,GAAEf,QAAS,GADb;AAELE,QAAAA,UAAU,EAAG,GAAEA,UAAW;AAFrB;AAHT;AAAA;AAAA;AAAA;AAAA,YAPF,eAeE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAEF,QAAQ,CAACgB,QAAT,EAFT;AAGE,MAAA,GAAG,EAAEV,QAHP;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,SAAS,EAAC,OALZ;AAME,MAAA,QAAQ,EAAET;AANZ;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAlDD;;GAAMF,M;;KAAAA,M;AAoDN,eAAeA,MAAf","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\n\nimport \"./slider.scss\";\nimport \"./thumb.scss\";\n\nconst Slider = ({ percentage = 0, onChange }) => {\n  const PERCENTAGE = 100;\n  const PIXELS_IN_PERCENTAGE = 7.5;\n\n  const [position, setPosition] = useState(0);\n  const [marginLeft, setMarginLeft] = useState(0);\n  const [progressBarWidth, setProgressBarWidth] = useState(0);\n\n  const rangeRef = useRef();\n  const thumbRef = useRef();\n\n  useEffect(() => {\n    const rangeWidth = rangeRef.current.getBoundingClientRect().width;\n    const thumbWidth = thumbRef.current.getBoundingClientRect().width;\n    const centerThumb = (thumbWidth / PERCENTAGE) * percentage * -1;\n    const centerProgressBar =\n      thumbWidth +\n      (rangeWidth / PERCENTAGE) * percentage -\n      (thumbWidth / PERCENTAGE) * percentage;\n    setPosition(percentage);\n    setMarginLeft(centerThumb);\n    setProgressBarWidth(centerProgressBar / PIXELS_IN_PERCENTAGE);\n  }, [percentage]);\n\n  return (\n    <div className=\"slider-container\">\n      <div\n        className=\"progress-bar-cover\"\n        style={{\n          width: `${progressBarWidth}%`,\n        }}\n      />\n      <div\n        className=\"thumb\"\n        ref={thumbRef}\n        style={{\n          left: `${position}%`,\n          marginLeft: `${marginLeft}px`,\n        }}\n      />\n      <input\n        type=\"range\"\n        value={position.toString()}\n        ref={rangeRef}\n        step=\"0.01\"\n        className=\"range\"\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}