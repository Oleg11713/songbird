{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u043E\\u043B\\u0435\\u0433\\\\Desktop\\\\iTechArt_\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\\\\songbird\\\\songbird\\\\src\\\\components\\\\controls\\\\ControlPanel.jsx\";\nimport React from \"react\";\nimport \"./control-panel.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ControlPanel = _ref => {\n  let {\n    duration,\n    currentTime\n  } = _ref;\n  const HOUR_IN_SECONDS = 3600;\n  const MINUTE_IN_SECONDS = 60;\n  const TEN = 10;\n\n  function secondsToHms(seconds) {\n    if (!seconds) return \"00:00\";\n    let duration = seconds;\n    let hours = duration / HOUR_IN_SECONDS;\n    duration = duration % HOUR_IN_SECONDS;\n    let min = parseInt(duration / MINUTE_IN_SECONDS);\n    duration = duration % MINUTE_IN_SECONDS;\n    let sec = parseInt(duration);\n\n    if (sec < TEN) {\n      sec = `0${sec}`;\n    }\n\n    if (min < TEN) {\n      min = `0${min}`;\n    }\n\n    if (parseInt(hours, TEN) > 0) {\n      return `${parseInt(hours, TEN)}:${min}:${sec}`;\n    } else if (min === 0) {\n      return `00:${sec}`;\n    } else {\n      return `${min}:${sec}`;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: secondsToHms(currentTime)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: secondsToHms(duration)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ControlPanel;\nexport default ControlPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlPanel\");","map":{"version":3,"sources":["C:/Users/олег/Desktop/iTechArt_Стажировка/songbird/songbird/src/components/controls/ControlPanel.jsx"],"names":["React","ControlPanel","duration","currentTime","HOUR_IN_SECONDS","MINUTE_IN_SECONDS","TEN","secondsToHms","seconds","hours","min","parseInt","sec"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,sBAAP;;;AAEA,MAAMC,YAAY,GAAG,QAA+B;AAAA,MAA9B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA8B;AAClD,QAAMC,eAAe,GAAG,IAAxB;AACA,QAAMC,iBAAiB,GAAG,EAA1B;AACA,QAAMC,GAAG,GAAG,EAAZ;;AAEA,WAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,QAAI,CAACA,OAAL,EAAc,OAAO,OAAP;AAEd,QAAIN,QAAQ,GAAGM,OAAf;AACA,QAAIC,KAAK,GAAGP,QAAQ,GAAGE,eAAvB;AACAF,IAAAA,QAAQ,GAAGA,QAAQ,GAAGE,eAAtB;AAEA,QAAIM,GAAG,GAAGC,QAAQ,CAACT,QAAQ,GAAGG,iBAAZ,CAAlB;AACAH,IAAAA,QAAQ,GAAGA,QAAQ,GAAGG,iBAAtB;AAEA,QAAIO,GAAG,GAAGD,QAAQ,CAACT,QAAD,CAAlB;;AAEA,QAAIU,GAAG,GAAGN,GAAV,EAAe;AACbM,MAAAA,GAAG,GAAI,IAAGA,GAAI,EAAd;AACD;;AACD,QAAIF,GAAG,GAAGJ,GAAV,EAAe;AACbI,MAAAA,GAAG,GAAI,IAAGA,GAAI,EAAd;AACD;;AAED,QAAIC,QAAQ,CAACF,KAAD,EAAQH,GAAR,CAAR,GAAuB,CAA3B,EAA8B;AAC5B,aAAQ,GAAEK,QAAQ,CAACF,KAAD,EAAQH,GAAR,CAAa,IAAGI,GAAI,IAAGE,GAAI,EAA7C;AACD,KAFD,MAEO,IAAIF,GAAG,KAAK,CAAZ,EAAe;AACpB,aAAQ,MAAKE,GAAI,EAAjB;AACD,KAFM,MAEA;AACL,aAAQ,GAAEF,GAAI,IAAGE,GAAI,EAArB;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAAwBL,YAAY,CAACJ,WAAD;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAAwBI,YAAY,CAACL,QAAD;AAApC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAvCD;;KAAMD,Y;AAwCN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\n\nimport \"./control-panel.scss\";\n\nconst ControlPanel = ({ duration, currentTime }) => {\n  const HOUR_IN_SECONDS = 3600;\n  const MINUTE_IN_SECONDS = 60;\n  const TEN = 10;\n\n  function secondsToHms(seconds) {\n    if (!seconds) return \"00:00\";\n\n    let duration = seconds;\n    let hours = duration / HOUR_IN_SECONDS;\n    duration = duration % HOUR_IN_SECONDS;\n\n    let min = parseInt(duration / MINUTE_IN_SECONDS);\n    duration = duration % MINUTE_IN_SECONDS;\n\n    let sec = parseInt(duration);\n\n    if (sec < TEN) {\n      sec = `0${sec}`;\n    }\n    if (min < TEN) {\n      min = `0${min}`;\n    }\n\n    if (parseInt(hours, TEN) > 0) {\n      return `${parseInt(hours, TEN)}:${min}:${sec}`;\n    } else if (min === 0) {\n      return `00:${sec}`;\n    } else {\n      return `${min}:${sec}`;\n    }\n  }\n\n  return (\n    <div className=\"control-panel\">\n      <div className=\"timer\">{secondsToHms(currentTime)}</div>\n      <div className=\"timer\">{secondsToHms(duration)}</div>\n    </div>\n  );\n};\nexport default ControlPanel;\n"]},"metadata":{},"sourceType":"module"}