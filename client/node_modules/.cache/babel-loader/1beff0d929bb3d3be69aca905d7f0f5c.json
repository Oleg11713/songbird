{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u043E\\u043B\\u0435\\u0433\\\\Desktop\\\\iTechArt_\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\\\\songbird\\\\songbird\\\\client\\\\src\\\\components\\\\buttonNext\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { selectIsLevelCompleted, selectLevel, selectMaxLevel } from \"../../redux/progress/selectors\";\nimport { setIsCorrectCurrentBird, setSelectedBird } from \"../../redux/birds/actions\";\nimport { setIsLevelCompleted, setLevel } from \"../../redux/progress/actions\";\nimport \"./styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ButtonNext = () => {\n  _s();\n\n  const START_LEVEL = 1;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  let level = useSelector(selectLevel);\n  const isLevelCompleted = useSelector(selectIsLevelCompleted);\n  const maxLevel = useSelector(selectMaxLevel);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `button-next ${isLevelCompleted ? \"active\" : \"\"}`,\n    onClick: () => {\n      if (isLevelCompleted) {\n        if (level < maxLevel) {\n          level++;\n        } else {\n          history.push(\"/endGame\");\n          level = START_LEVEL;\n        }\n\n        dispatch(setSelectedBird(null));\n      }\n\n      dispatch(setIsCorrectCurrentBird(false));\n      dispatch(setLevel(level));\n      dispatch(setIsLevelCompleted(false));\n    },\n    children: \"Next Level\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ButtonNext, \"h/8BqwIgEFoglRfoyatca48oLOI=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useSelector];\n});\n\n_c = ButtonNext;\nexport default ButtonNext;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonNext\");","map":{"version":3,"sources":["C:/Users/олег/Desktop/iTechArt_Стажировка/songbird/songbird/client/src/components/buttonNext/index.jsx"],"names":["React","useDispatch","useSelector","useHistory","selectIsLevelCompleted","selectLevel","selectMaxLevel","setIsCorrectCurrentBird","setSelectedBird","setIsLevelCompleted","setLevel","ButtonNext","START_LEVEL","dispatch","history","level","isLevelCompleted","maxLevel","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SACEC,sBADF,EAEEC,WAFF,EAGEC,cAHF,QAIO,gCAJP;AAKA,SACEC,uBADF,EAEEC,eAFF,QAGO,2BAHP;AAIA,SAASC,mBAAT,EAA8BC,QAA9B,QAA8C,8BAA9C;AAEA,OAAO,eAAP;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,WAAW,GAAG,CAApB;AAEA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,OAAO,GAAGX,UAAU,EAA1B;AACA,MAAIY,KAAK,GAAGb,WAAW,CAACG,WAAD,CAAvB;AACA,QAAMW,gBAAgB,GAAGd,WAAW,CAACE,sBAAD,CAApC;AACA,QAAMa,QAAQ,GAAGf,WAAW,CAACI,cAAD,CAA5B;AAEA,sBACE;AACE,IAAA,SAAS,EAAG,eAAcU,gBAAgB,GAAG,QAAH,GAAc,EAAG,EAD7D;AAEE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIA,gBAAJ,EAAsB;AACpB,YAAID,KAAK,GAAGE,QAAZ,EAAsB;AACpBF,UAAAA,KAAK;AACN,SAFD,MAEO;AACLD,UAAAA,OAAO,CAACI,IAAR,CAAa,UAAb;AACAH,UAAAA,KAAK,GAAGH,WAAR;AACD;;AACDC,QAAAA,QAAQ,CAACL,eAAe,CAAC,IAAD,CAAhB,CAAR;AACD;;AACDK,MAAAA,QAAQ,CAACN,uBAAuB,CAAC,KAAD,CAAxB,CAAR;AACAM,MAAAA,QAAQ,CAACH,QAAQ,CAACK,KAAD,CAAT,CAAR;AACAF,MAAAA,QAAQ,CAACJ,mBAAmB,CAAC,KAAD,CAApB,CAAR;AACD,KAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA9BD;;GAAME,U;UAGaV,W,EACDE,U,EACJD,W,EACaA,W,EACRA,W;;;KAPbS,U;AAgCN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  selectIsLevelCompleted,\n  selectLevel,\n  selectMaxLevel,\n} from \"../../redux/progress/selectors\";\nimport {\n  setIsCorrectCurrentBird,\n  setSelectedBird,\n} from \"../../redux/birds/actions\";\nimport { setIsLevelCompleted, setLevel } from \"../../redux/progress/actions\";\n\nimport \"./styles.scss\";\n\nconst ButtonNext = () => {\n  const START_LEVEL = 1;\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  let level = useSelector(selectLevel);\n  const isLevelCompleted = useSelector(selectIsLevelCompleted);\n  const maxLevel = useSelector(selectMaxLevel);\n\n  return (\n    <button\n      className={`button-next ${isLevelCompleted ? \"active\" : \"\"}`}\n      onClick={() => {\n        if (isLevelCompleted) {\n          if (level < maxLevel) {\n            level++;\n          } else {\n            history.push(\"/endGame\");\n            level = START_LEVEL;\n          }\n          dispatch(setSelectedBird(null));\n        }\n        dispatch(setIsCorrectCurrentBird(false));\n        dispatch(setLevel(level));\n        dispatch(setIsLevelCompleted(false));\n      }}\n    >\n      Next Level\n    </button>\n  );\n};\n\nexport default ButtonNext;\n"]},"metadata":{},"sourceType":"module"}