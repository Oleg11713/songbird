{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u043E\\u043B\\u0435\\u0433\\\\Desktop\\\\iTechArt_\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\\\\songbird\\\\songbird\\\\src\\\\components\\\\signIn\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport firebase from \"firebase/compat\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { TextField } from \"@material-ui/core\";\nimport FormInput from \"../formInput\";\nimport CustomButton from \"../customButton\";\nimport { auth } from \"../../firebase/utils\";\nimport { setCurrentUser } from \"../../redux/user/actions\";\nimport \"./styles.scss\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: async event => {\n      event.preventDefault();\n      console.log(this.initialValues.email, this.initialValues.password);\n\n      try {\n        setLoading(true);\n        await auth.signInWithEmailAndPassword(this.initialValues.email, this.initialValues.password);\n        toast.success(\"Авторизация прошла успешно\", {\n          className: \"toast-success\",\n          draggable: false,\n          position: toast.POSITION.BOTTOM_CENTER\n        });\n        history.push(\"/\");\n      } catch {\n        toast.error(\"Не удалось войти\", {\n          className: \"toast-error\",\n          draggable: false,\n          position: toast.POSITION.BOTTOM_CENTER\n        });\n      }\n\n      setLoading(false);\n    }\n  });\n\n  const loginWithGoogle = async () => {\n    dispatch(setCurrentUser(await auth.signInWithPopup(new firebase.auth.GoogleAuthProvider())));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"\\u0423 \\u043C\\u0435\\u043D\\u044F \\u0443\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0412\\u043E\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0443, \\u0443\\u043A\\u0430\\u0437\\u0430\\u0432 \\u0441\\u0432\\u043E\\u0439 \\u0430\\u0434\\u0440\\u0435\\u0441 \\u044D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0439 \\u043F\\u043E\\u0447\\u0442\\u044B \\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"email\",\n        name: \"email\",\n        type: \"email\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        value: formik.values.password,\n        onChange: formik.handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          disabled: loading,\n          type: \"submit\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          onClick: loginWithGoogle,\n          isGoogleSignIn: true,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"pwH4mVl26s3wKNK8tHu5HgMyJo0=\", false, function () {\n  return [useHistory, useDispatch, useFormik];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/олег/Desktop/iTechArt_Стажировка/songbird/songbird/src/components/signIn/index.jsx"],"names":["React","useState","firebase","useHistory","useDispatch","toast","ToastContainer","useFormik","yup","TextField","FormInput","CustomButton","auth","setCurrentUser","SignIn","loading","setLoading","history","dispatch","formik","initialValues","email","password","onSubmit","event","preventDefault","console","log","signInWithEmailAndPassword","success","className","draggable","position","POSITION","BOTTOM_CENTER","push","error","loginWithGoogle","signInWithPopup","GoogleAuthProvider","handleSubmit","values","handleChange"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport firebase from \"firebase/compat\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { TextField } from \"@material-ui/core\";\n\nimport FormInput from \"../formInput\";\nimport CustomButton from \"../customButton\";\nimport { auth } from \"../../firebase/utils\";\nimport { setCurrentUser } from \"../../redux/user/actions\";\n\nimport \"./styles.scss\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst SignIn = () => {\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    onSubmit: async (event) => {\n      event.preventDefault();\n      console.log(this.initialValues.email, this.initialValues.password);\n\n      try {\n        setLoading(true);\n        await auth.signInWithEmailAndPassword(\n          this.initialValues.email,\n          this.initialValues.password\n        );\n        toast.success(\"Авторизация прошла успешно\", {\n          className: \"toast-success\",\n          draggable: false,\n          position: toast.POSITION.BOTTOM_CENTER,\n        });\n        history.push(\"/\");\n      } catch {\n        toast.error(\"Не удалось войти\", {\n          className: \"toast-error\",\n          draggable: false,\n          position: toast.POSITION.BOTTOM_CENTER,\n        });\n      }\n\n      setLoading(false);\n    },\n  });\n\n  const loginWithGoogle = async () => {\n    dispatch(\n      setCurrentUser(\n        await auth.signInWithPopup(new firebase.auth.GoogleAuthProvider())\n      )\n    );\n  };\n\n  return (\n    <div className=\"sign-in\">\n      <div className=\"title\">У меня уже есть аккаунт</div>\n      <div>Войдите в систему, указав свой адрес электронной почты и пароль</div>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          id=\"email\"\n          name=\"email\"\n          type=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          label=\"Email\"\n          required\n        />\n        <TextField\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          label=\"Password\"\n          required\n        />\n        <div className=\"buttons\">\n          <CustomButton disabled={loading} type=\"submit\">\n            Sign in\n          </CustomButton>\n          <CustomButton onClick={loginWithGoogle} isGoogleSignIn>\n            Sign in with Google\n          </CustomButton>\n        </div>\n      </form>\n      <>\n        <ToastContainer />\n      </>\n    </div>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}