{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u043E\\u043B\\u0435\\u0433\\\\Desktop\\\\iTechArt_\\u0421\\u0442\\u0430\\u0436\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\\\\songbird\\\\songbird\\\\src\\\\components\\\\answerOptions\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport lostSound from \"../../sounds/lost.mp3\";\nimport wonSound from \"../../sounds/won.mp3\";\nimport { selectIsLevelCompleted, selectScoreOnTheLevel } from \"../../redux/progress/selectors\";\nimport { setIsCorrectCurrentBird, setSelectedBird } from \"../../redux/birds/actions\";\nimport { setIsLevelCompleted, setScoreOnTheLevel, setTotalScore } from \"../../redux/progress/actions\";\nimport \"./styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnswerOptions = _ref => {\n  _s();\n\n  let {\n    birds,\n    currentBird\n  } = _ref;\n  const SOUND_VOLUME = 0.1;\n  const MAX_SCORE_ON_THE_LEVEL = 5;\n  const dispatch = useDispatch();\n  const isLevelCompleted = useSelector(selectIsLevelCompleted);\n  const scoreOnTheLevel = useSelector(selectScoreOnTheLevel);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"answer-options\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"answers-group\",\n      children: birds.map(bird => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"answers-item\",\n        onClick: () => {\n          dispatch(setSelectedBird(bird));\n          const click = document.querySelector(`#${bird.name}`);\n\n          if (!isLevelCompleted) {\n            if (bird.name === currentBird.name) {\n              click.classList.add(\"won\");\n              const sound = new Audio(wonSound);\n              sound.volume = SOUND_VOLUME;\n              sound.play();\n              dispatch(setIsCorrectCurrentBird(true));\n              dispatch(setIsLevelCompleted(true));\n              dispatch(setTotalScore(scoreOnTheLevel));\n              dispatch(setScoreOnTheLevel(MAX_SCORE_ON_THE_LEVEL));\n            } else {\n              click.classList.remove(\"won\");\n\n              if (!click.classList.contains(\"lost\")) {\n                const sound = new Audio(lostSound);\n                sound.volume = SOUND_VOLUME;\n                sound.play();\n                dispatch(setScoreOnTheLevel(scoreOnTheLevel - 1));\n              }\n\n              click.classList.add(\"lost\");\n            }\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: bird.name,\n          className: `circle`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), bird.name]\n      }, bird.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AnswerOptions, \"4XQs3Pu7rXQPhOhAy+l3Wa7R9aw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AnswerOptions;\nexport default AnswerOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerOptions\");","map":{"version":3,"sources":["C:/Users/олег/Desktop/iTechArt_Стажировка/songbird/songbird/src/components/answerOptions/index.jsx"],"names":["React","useDispatch","useSelector","lostSound","wonSound","selectIsLevelCompleted","selectScoreOnTheLevel","setIsCorrectCurrentBird","setSelectedBird","setIsLevelCompleted","setScoreOnTheLevel","setTotalScore","AnswerOptions","birds","currentBird","SOUND_VOLUME","MAX_SCORE_ON_THE_LEVEL","dispatch","isLevelCompleted","scoreOnTheLevel","map","bird","click","document","querySelector","name","classList","add","sound","Audio","volume","play","remove","contains"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SACEC,sBADF,EAEEC,qBAFF,QAGO,gCAHP;AAIA,SACEC,uBADF,EAEEC,eAFF,QAGO,2BAHP;AAIA,SACEC,mBADF,EAEEC,kBAFF,EAGEC,aAHF,QAIO,8BAJP;AAMA,OAAO,eAAP;;;AAEA,MAAMC,aAAa,GAAG,QAA4B;AAAA;;AAAA,MAA3B;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA2B;AAChD,QAAMC,YAAY,GAAG,GAArB;AACA,QAAMC,sBAAsB,GAAG,CAA/B;AAEA,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAMiB,gBAAgB,GAAGhB,WAAW,CAACG,sBAAD,CAApC;AACA,QAAMc,eAAe,GAAGjB,WAAW,CAACI,qBAAD,CAAnC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA,gBACGO,KAAK,CAACO,GAAN,CAAWC,IAAD,iBACT;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,OAAO,EAAE,MAAM;AACbJ,UAAAA,QAAQ,CAACT,eAAe,CAACa,IAAD,CAAhB,CAAR;AACA,gBAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAwB,IAAGH,IAAI,CAACI,IAAK,EAArC,CAAd;;AACA,cAAI,CAACP,gBAAL,EAAuB;AACrB,gBAAIG,IAAI,CAACI,IAAL,KAAcX,WAAW,CAACW,IAA9B,EAAoC;AAClCH,cAAAA,KAAK,CAACI,SAAN,CAAgBC,GAAhB,CAAoB,KAApB;AACA,oBAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUzB,QAAV,CAAd;AACAwB,cAAAA,KAAK,CAACE,MAAN,GAAef,YAAf;AACAa,cAAAA,KAAK,CAACG,IAAN;AACAd,cAAAA,QAAQ,CAACV,uBAAuB,CAAC,IAAD,CAAxB,CAAR;AACAU,cAAAA,QAAQ,CAACR,mBAAmB,CAAC,IAAD,CAApB,CAAR;AACAQ,cAAAA,QAAQ,CAACN,aAAa,CAACQ,eAAD,CAAd,CAAR;AACAF,cAAAA,QAAQ,CAACP,kBAAkB,CAACM,sBAAD,CAAnB,CAAR;AACD,aATD,MASO;AACLM,cAAAA,KAAK,CAACI,SAAN,CAAgBM,MAAhB,CAAuB,KAAvB;;AACA,kBAAI,CAACV,KAAK,CAACI,SAAN,CAAgBO,QAAhB,CAAyB,MAAzB,CAAL,EAAuC;AACrC,sBAAML,KAAK,GAAG,IAAIC,KAAJ,CAAU1B,SAAV,CAAd;AACAyB,gBAAAA,KAAK,CAACE,MAAN,GAAef,YAAf;AACAa,gBAAAA,KAAK,CAACG,IAAN;AACAd,gBAAAA,QAAQ,CAACP,kBAAkB,CAACS,eAAe,GAAG,CAAnB,CAAnB,CAAR;AACD;;AACDG,cAAAA,KAAK,CAACI,SAAN,CAAgBC,GAAhB,CAAoB,MAApB;AACD;AACF;AACF,SA3BH;AAAA,gCA6BE;AAAM,UAAA,EAAE,EAAEN,IAAI,CAACI,IAAf;AAAqB,UAAA,SAAS,EAAG;AAAjC;AAAA;AAAA;AAAA;AAAA,gBA7BF,EA8BGJ,IAAI,CAACI,IA9BR;AAAA,SACOJ,IAAI,CAACI,IADZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CAhDD;;GAAMb,a;UAIaX,W,EACQC,W,EACDA,W;;;KANpBU,a;AAkDN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport lostSound from \"../../sounds/lost.mp3\";\nimport wonSound from \"../../sounds/won.mp3\";\nimport {\n  selectIsLevelCompleted,\n  selectScoreOnTheLevel,\n} from \"../../redux/progress/selectors\";\nimport {\n  setIsCorrectCurrentBird,\n  setSelectedBird,\n} from \"../../redux/birds/actions\";\nimport {\n  setIsLevelCompleted,\n  setScoreOnTheLevel,\n  setTotalScore,\n} from \"../../redux/progress/actions\";\n\nimport \"./styles.scss\";\n\nconst AnswerOptions = ({ birds, currentBird }) => {\n  const SOUND_VOLUME = 0.1;\n  const MAX_SCORE_ON_THE_LEVEL = 5;\n\n  const dispatch = useDispatch();\n  const isLevelCompleted = useSelector(selectIsLevelCompleted);\n  const scoreOnTheLevel = useSelector(selectScoreOnTheLevel);\n\n  return (\n    <div className=\"answer-options\">\n      <ul className=\"answers-group\">\n        {birds.map((bird) => (\n          <li\n            key={bird.name}\n            className=\"answers-item\"\n            onClick={() => {\n              dispatch(setSelectedBird(bird));\n              const click = document.querySelector(`#${bird.name}`);\n              if (!isLevelCompleted) {\n                if (bird.name === currentBird.name) {\n                  click.classList.add(\"won\");\n                  const sound = new Audio(wonSound);\n                  sound.volume = SOUND_VOLUME;\n                  sound.play();\n                  dispatch(setIsCorrectCurrentBird(true));\n                  dispatch(setIsLevelCompleted(true));\n                  dispatch(setTotalScore(scoreOnTheLevel));\n                  dispatch(setScoreOnTheLevel(MAX_SCORE_ON_THE_LEVEL));\n                } else {\n                  click.classList.remove(\"won\");\n                  if (!click.classList.contains(\"lost\")) {\n                    const sound = new Audio(lostSound);\n                    sound.volume = SOUND_VOLUME;\n                    sound.play();\n                    dispatch(setScoreOnTheLevel(scoreOnTheLevel - 1));\n                  }\n                  click.classList.add(\"lost\");\n                }\n              }\n            }}\n          >\n            <span id={bird.name} className={`circle`} />\n            {bird.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AnswerOptions;\n"]},"metadata":{},"sourceType":"module"}